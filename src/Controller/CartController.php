<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\View\Helper\UrlHelper;

class CartController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Auth->allow();

        $this->Url = new UrlHelper(new \Cake\View\View());
        $this->loadModel('Products');
        $this->loadComponent('Cart');
    }

    public function index(){
        $carts = $this->Cart->getcart();
        $this->set(compact('carts'));
    }

    public function add(){
        if ($this->request->is('ajax')) {
            $request_data = $this->request->getData();
            $id = $request_data['product_id'];
            $quantity = 1;
            $product = $this->Products->get($id, [
                'contain' => []
            ]);
            if(empty($product)) {
                $json_data = json_encode(array(
                    'error' => true,
                    'mess' => 'Product does not exist.'
                ));
                $response = $this->response->withType('json')->withStringBody($json_data);
                return $response;

            } else {
                $this->Cart->add($id, $quantity);

                $json_data = json_encode(array(
                    'html' => $this->show_cart(),
                ));
                $response = $this->response->withType('json')->withStringBody($json_data);
                return $response;
            }
        }
    }

    public function update(){
        if ($this->request->is('post')) {
            $post_data = $this->request->getData();

            $carts = $this->Cart->getcart();
            foreach ($carts['Orderproducts'] as $key => $cart) {
                $qty = $post_data['qty_'.$key];
                $this->log($cart, 'debug');
                $this->Cart->update($key, $qty);
            }
        }
        return $this->redirect('/cart');
    }

    public function delete($id = null) {
        $product = $this->Cart->remove($id);
        if(!empty($product)) {
            // $this->Flash->error($product['name'] . ' was removed from your shopping cart');
        }
        return $this->redirect($this->referer());
    }

    private function show_cart(){
        $html = '';

        $carts = $this->Cart->getcart();
        //$this->log($carts, 'debug');

        $html .= '
            <div class="inner-box">
	            <a href="#" title="">
		            <div class="icon-cart">
			            <img src="'.$this->Url->image('front/icons/cart.png').'" alt="">
			            <span>'.$carts['Order']['quantity'].'</span>
		            </div>
		            <div class="price">
			            '.number_format($carts['Order']['total']).' đ
		            </div>
	            </a>
	            <div class="dropdown-box">
		            <ul>
        ';
        if(isset($carts['Orderproducts'])) {
            foreach ($carts['Orderproducts'] as $cart) {
                $html .= '
                        <li>
                            <div class="img-product">
                                <img src="' . $this->Url->build('/img/product_img/' . $cart['image_link']) . '" alt="">
                            </div>
                            <div class="info-product">
                                <div class="name">
                                    ' . $cart['name'] . '
                                </div>
                                <div class="price">
                                    <span>' . $cart['quantity'] . ' x</span>
                                    <span>' . number_format($cart['price']) . ' đ</span>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <span class="delete"><a href="' . $this->Url->build('/cart/delete/' . $cart['product_id']) . '" >x</a></span>
                        </li>
            ';
            }
        }
        $html .= '
                    </ul>
                    <div class="total">
                        <span>Subtotal:</span>
                        <span class="price">'.number_format($carts['Order']['total']).' đ</span>
                    </div>
                    <div class="btn-cart">
                        <a href="'.$this->Url->build('/cart').'" class="view-cart" title="">View Cart</a>
                        <a href="'.$this->Url->build('/order/checkout').'" class="check-out" title="">Checkout</a>
                    </div>
                </div>
            </div>
        ';

        return $html;
    }

    function loadCart(){
        echo $this->show_cart();
        $this->autoRender = false;
        die();

        /*$json_data = json_encode(array(
            'html' => $this->show_cart(),
        ));
        $response = $this->response->withType('json')->withStringBody($json_data);
        return $response;*/
    }
}
